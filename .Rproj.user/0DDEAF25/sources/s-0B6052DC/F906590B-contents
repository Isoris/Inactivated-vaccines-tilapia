#install.packages("ggstatsplot")
library(ggstatplot)
library("gridExtra")
library(htmltools)
library(psych)
library(Hmisc)
library(readxl)
library(tidyverse)
library(summarytools)
library(dplyr)
library(writexl)
library(gapminder)
library("readxl")
library(plyr)
library("dplyr")
library("ggplot2")
library("RColorBrewer")
library(rstatix)
library(ggpubr)
library(reshape2)
library("gridExtra")
library(htmlTable)

# Choose path from the lower right panel in files, go to the directory containing the datasheet to load, and then set as working directory. 
# The datasheet excel should be in the 'R working directory'.
setwd("C:/Users/PC/Desktop/Year 2021/Classes/Statistics for aquaculture/practicum 5")
practi5 <- read_xlsx("Practicium5-QA-MeansMediansSD_allstats.xlsx", sheet ="R_data" )
round(practi5, digits = 0)
practi5.long <- stack(practi5, select = 2:7) %>%  na.omit()

my_comparisons <- list( c("Male0", "MaleNA"), 
                        c("Male0", "MaleMV"), 
                        c("MaleNA", "MaleMV"),
                        c("Female0","FemaleNA"),
                        c("Female0", "FemaleMV"), 
                        c("FemaleNA", "FemaleMV")) 

practi5.long %>% mutate(class = fct_reorder(ind, values, .fun='median')) %>% 
  ggplot(aes(x=reorder(ind, values), y = values, fill=ind))+geom_boxplot(notch = F)+
  scale_fill_brewer(palette = "Set3", name = "Scenarios")+
  ggtitle("Fig. 1 Comparison of the survival of male and female in three different scenarios ")+
  geom_jitter(alpha=0.3,)+
  xlab("Scenarios")+ylab("Number of animals in happas")+
  stat_compare_means(method = "t.test", hide.ns = F, na.rm = T, comparisons = my_comparisons, label = "p.signif")

summary <- psych::describe(practi5, quant=c(.5,0.25,0.33,0.5,0.66,0.75,0.95))

write_xlsx(summary, "Practicum5-QA-MeansMediansSD_allstatsFINAL.xlsx")

# Load data
#:::::::::::::::::::::::::::::::::::::::
data("ToothGrowth")
df <- ToothGrowth

# One-sample test
#:::::::::::::::::::::::::::::::::::::::::
compare_means(len ~ 1, df, mu = 0)

# Two-samples unpaired test
#:::::::::::::::::::::::::::::::::::::::::
compare_means(len ~ supp, df)

# Two-samples paired test
#:::::::::::::::::::::::::::::::::::::::::
compare_means(len ~ supp, df, paired = TRUE)

# Compare supp levels after grouping the data by "dose"
#::::::::::::::::::::::::::::::::::::::::
compare_means(len ~ supp, df, group.by = "dose")

# pairwise comparisons
#::::::::::::::::::::::::::::::::::::::::
# As dose contains more thant two levels ==>
# pairwise test is automatically performed.
compare_means(len ~ dose, df)

# Comparison against reference group
#::::::::::::::::::::::::::::::::::::::::
compare_means(len ~ dose, df, ref.group = "0.5")

# Comparison against all
#::::::::::::::::::::::::::::::::::::::::
compare_means(len ~ dose, df, ref.group = ".all.")

# Anova and kruskal.test
#::::::::::::::::::::::::::::::::::::::::
compare_means(len ~ dose, df, method = "anova")
compare_means(len ~ dose, df, method = "kruskal.test")
